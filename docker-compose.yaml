version: '3.8'

services:
  backend:
    build:
      context: ./backend  # Path ไปยัง directory backend ที่มี Dockerfile
      dockerfile: Dockerfile
    container_name: smartport-backend
    ports:
      - "8000:80"  # Map port 8000 บน host ไปยัง 80 ใน container
    volumes:
      - ./backend:/var/www/html  # Mount codebase backend
      - ./backend/uploads:/var/www/html/uploads  # สำหรับ uploads
    environment:
      - MYSQL_HOST=db
      - MYSQL_DATABASE=smartport_db
      - MYSQL_USER=root
      - MYSQL_PASSWORD=rootpassword  # เปลี่ยนเป็นรหัสจริง
      - JWT_SECRET=your_jwt_secret_key  # จาก config.php
    depends_on:
      db:
          condition: service_healthy
    networks:
      - smartport-net


  db:
    image: mysql:8.0
    container_name: smartport-db
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=smartport_db
    volumes:
      - db-data:/var/lib/mysql
      - ./mysql_database_design.sql:/docker-entrypoint-initdb.d/01-schema.sql  # Init schema
      - ./photo_management_system.sql:/docker-entrypoint-initdb.d/02-data.sql  # Init data ถ้ามี
    networks:
      - smartport-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--silent"]  # ตรวจว่า MySQL พร้อม
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s  # ให้เวลา init SQL schema

  frontend:
    build:
      context: ./frontend  # Path ไปยัง directory frontend ที่มี Dockerfile
      dockerfile: Dockerfile
    container_name: smartport-frontend
    ports:
      - "8080:80"  # Map port 8080 บน host ไปยัง 80 ใน container
    volumes:
      - ./frontend:/usr/share/nginx/html  # สำหรับ development; ลบถ้า production
    networks:
      - smartport-net
    depends_on:
      - backend

networks:
  smartport-net:
    driver: bridge

volumes:
  db-data: